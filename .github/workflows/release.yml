name: Release
'on':
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

env:
  SHELL: "/bin/bash"

jobs:
  checksum:
    runs-on: ubuntu-latest-8-cores
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./objdir-*/dist

      - name: Generate checksum file
        run: |
          mkdir ./dist
          mv ./objdir-*/dist/Artifact_Classic_*_${{ github.run_id }}/objdir-*/dist/waterfox*.tar.bz2 ./dist/
          mv ./objdir-*/dist/Artifact_Classic_*_${{ github.run_id }}/objdir-*/dist/waterfox-classic/Waterfox*.dmg ./dist/
          mv ./objdir-*/dist/Artifact_Classic_*_${{ github.run_id }}/objdir-*/dist/install/sea/*.exe ./dist/
          cd ./dist/
          checksumFile=$(basename waterfox*.tar.bz2 | sed 's/.tar.bz2//g' | sed 's/.linux-x86_64//g' | sed 's/.en-US//g'| sed 's/$/.sha256/g')
          sha256sum waterfox*.tar.bz2 | tee -a "$checksumFile"
          sha256sum Waterfox*.dmg | tee -a "$checksumFile"
          sha256sum Waterfox*.exe | tee -a "$checksumFile"

      - name: Get Previous tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - name: Upload SHASUM
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ./dist/waterfox*.sha256
          tag: ${{ steps.previoustag.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Artifact_Classic_Checksum_${{ github.run_id }}
          path: ./dist/waterfox*.sha256

  upload:
    runs-on: ubuntu-latest-8-cores
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./objdir-*/dist

      - name: Get Previous tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - name: ü™ü Upload Windows Installer
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ./objdir-*/dist/install/sea/*.exe
          artifactContentType: application/vnd.microsoft.portable-executable
          tag: ${{ steps.previoustag.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: ü™ü Upload Windows MAR
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ./objdir-*/dist/update/waterfox-classic-*.en-US.*.complete.xz.mar
          tag: ${{ steps.previoustag.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: üêß Upload Linux Installer
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ./objdir-*/dist/waterfox*.tar.bz2
          artifactContentType: application/zip
          tag: ${{ steps.previoustag.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: üêß Upload Linux MAR
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ./objdir-*/dist/update/waterfox-classic-*.en-US.*.complete.xz.mar
          tag: ${{ steps.previoustag.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: üçé Upload macOS Artifacts
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ./objdir-*/dist/waterfox-classic/*.dmg,./objdir-*/dist/update/*.mar
          tag: ${{ steps.previoustag.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}

  aus-upload-dryrun:
    runs-on: ubuntu-latest-8-cores
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_EC2_METADATA_DISABLED: true
      AWS_REGION: us-west-2
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./objdir-*/dist

      - name: Get Previous tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - name: Dry run AUS
        run: |
          mkdir win64
          mkdir linux64
          mkdir osx64
          mv ./objdir-*/dist/Artifact_Classic_Linux_${{ github.run_id }}/objdir-*/dist/update/update.xml ./linux64/
          mv ./objdir-*/dist/Artifact_Classic_macOS_${{ github.run_id }}/objdir-*/dist/update/update.xml ./osx64/
          mv ./objdir-*/dist/Artifact_Classic_Windows_${{ github.run_id }}/objdir-*/dist/update/update.xml ./win64/
          os=(win64 linux64 osx64)
          for o_sys in ${os[@]}
          do
              update_loc=$o_sys/update.xml
              dir=${o_sys/64/-classic}
              aws s3 cp --content-type="text/xml" --metadata-directive="REPLACE" $update_loc \
                s3://aus.waterfox.net/update/old/test/$dir/update.xml
              for j in $(aws s3 ls s3://aus.waterfox.net/update/old/$o_sys/ | awk '{OFS=" "};{if ($1=="PRE") print $2}')
              do
                  ver=$(echo $j | sed 's/\///g')
                  if [[ $j == 'old/' ]]
                  then
                      continue
                  elif [[ $j != '/' ]]
                  then
                      aws s3 cp --dryrun --content-type="text/xml" --metadata-directive="REPLACE" $update_loc \
                      s3://aus.waterfox.net/update/old/$o_sys/$ver/en-US/release/update.xml
                  fi
              done
          done

          touch blank.xml
          echo '<?xml version="1.0"?><updates></updates>' > blank.xml
          tag=${{ steps.previoustag.outputs.tag }}
          version=${tag/-classic/}
          os=(linux64 osx64 win64)
          for i in ${os[@]}
          do
              aws s3 cp --content-type="text/xml" --metadata-directive="REPLACE" blank.xml \
                  s3://aus.waterfox.net/update/old/$i/$version/en-US/release/update.xml
          done

  aus-upload-release:
    runs-on: ubuntu-latest-8-cores
    needs: [aus-upload-dryrun]
    environment: hard-release
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_EC2_METADATA_DISABLED: true
      AWS_REGION: us-west-2
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Upload to AUS
        run: |
          os=(win64 linux64 osx64)
          for o_sys in ${os[@]}
          do
              dir=${o_sys/64/-classic}
              update_loc=s3://aus.waterfox.net/update/old/test/$dir/update.xml
              for j in $(aws s3 ls s3://aus.waterfox.net/update/old/$o_sys/ | awk '{OFS=" "};{if ($1=="PRE") print $2}')
              do
                  ver=$(echo $j | sed 's/\///g')
                  if [[ $j == 'old/' ]]
                  then
                      continue
                  elif [[ $j != '/' ]]
                  then
                      aws s3 cp --content-type="text/xml" --metadata-directive="REPLACE" $update_loc \
                      s3://aus.waterfox.net/update/old/$o_sys/$ver/en-US/release/update.xml
                  fi
              done
          done
